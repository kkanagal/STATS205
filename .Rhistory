gr4sf=which(substr(data$X,1,4)=="4SGA")
gr1=which(substr(data$X,1,2)=="PS")
gr2=which(substr(data$X,1,2)=="NP")
gr3=which(substr(data$X,1,2)=="HF")
colnb=rep(0, 1448)
colnb[gr1] = 1
colnb[gr2] = 2
colnb[gr3] = 3
colnb[gr4sf] = 4
colnb[gr4sfg] = 5
celltypes=as.factor(c("PS","NP","HF","4G","4GF")[colnb])
gr4sfglen <- length(gr4sfg)
gr4sflen <- length(gr4sf)
gr1len <- length(gr1)
gr2len <- length(gr2)
gr3len <- length(gr3)
# creates a matrix that will become a contingency table
mat <- matrix(, nrow = ncol(data)-1, ncol = 5)
for (x in 1:5) {
low = 0
high = 1
if (x == 1) {
low = 0
high = gr4sfglen
}
else if (x == 2) {
low = gr4sfglen+1
high = gr4sfglen+gr4sflen
# sub = low:high
}
else if (x == 3) {
low = gr4sfglen+gr4sflen+1
high = gr4sfglen+gr4sflen+gr3len
# sub = low:high
}
else if (x == 4) {
low = gr4sfglen+gr4sflen+gr3len+1
high = gr4sfglen+gr4sflen+gr3len+gr2len
# sub = low:high
}
else {
low = gr4sfglen+gr4sflen+gr3len+gr2len+1
high = gr4sfglen+gr4sflen+gr3len+gr2len+gr1len
# sub = low:high
}
sub = low:high
for (y in 1:(ncol(data)-1)) {
mat[y,x] = sum(data[sub,y+1])
}
}
rownames(mat) <- colnames(data)[2:34]
colnames(mat) <- c("4SFGA","4SGA","HF","NP","PS")
View(mat)
write.csv(mat, "contigency_matrix")
ctable <- as.table(mat)
chisq.test(ctable)
View(ctable)
chisq.test(mat)
chisq.test(mat)
mat[-c(15,17)]
mat[-c(15,17),]
mat[-c(14,16),]
ctable <- mat[-c(14,16),]
chisq.test(ctable)
mosaic(ctable, shade = T, legend = T)
library(ca)
mosaic(ctable, shade = T, legend = T)
mosaicplot(ctable, shade = T, legend = T)
assocplot(ctable, shade = T, legend = T)
library(vcd)
mosaic(ctable, shade = T, legend = T)
dev.off()
plot()
mosaic(ctable, shade = T, legend = T)
mosaicplot(ctable, shade = T, legend = T)
assoc(ctable, shade = T, legend = T)
dev.off()
assoc(ctable, shade = T, legend = T)
assoc(ctable[0:r4sfglen+gr4sflen+gr3len,], shade = T, legend = T)
gr4sfglen <- length(gr4sfg)
gr4sflen <- length(gr4sf)
gr1len <- length(gr1)
gr2len <- length(gr2)
gr3len <- length(gr3)
assoc(ctable[0:r4sfglen+gr4sflen+gr3len,], shade = T, legend = T)
assoc(ctable[0:gr4sfglen+gr4sflen+gr3len,], shade = T, legend = T)
assoc(ctable[0:gr4sfglen+gr4sflen,], shade = T, legend = T)
assoc(ctable[0:gr4sfglen+gr4sflen,2], shade = T, legend = T)
View(ctable)
assoc(ctable[0:10,], shade = T, legend = T)
assoc(ctable[0:5,], shade = T, legend = T)
assoc(ctable[6:10,], shade = T, legend = T)
assoc(ctable[10:15,], shade = T, legend = T)
assoc(ctable[15:20,], shade = T, legend = T)
assoc(ctable[20:31,], shade = T, legend = T)
fit <- ca(ctable)
plot(fit)
plot(fit, mass = TRUE, contrib = "absolute", map = "rowgreen", arrows = c(FALSE, TRUE))
tctable <- t(ctable)
fit2 <- ca(tctable)
plot(fit2)
plot(fit2, mass = TRUE, contrib = "absolute", map = "rowgreen", arrows = c(FALSE, TRUE))
mosaicplot(ctable, shade = T)
assoc(ctable, shade = T, legend = T)
tctable <- t(ctable)
fit2 <- ca(tctable)
plot(fit2)
plot(fit2, mass = TRUE, contrib = "absolute", map = "rowgreen", arrows = c(FALSE, TRUE))
mosaicplot(ctable, shade = T)
ctable
nrow(ctable)
ctable[-5]
ctable[-5,]
ctable[-1,]
for (i in 1:nrow(ctable)) {
temp <- ctable[-i,]
chisq.test(temp)
}
chisq.test(temp)
for (i in 1:nrow(ctable)) {
temp <- ctable[-i,]
print(chisq.test(temp))
}
to_graph <- rep(0,nrow(ctable))
for (i in 1:nrow(ctable)) {
temp <- ctable[-i,]
to_graph[i] <- chisq.test(temp)
}
to_graph
plot(to_graph)
plot(1:31, to_graph)
plot(rownames(ctable), to_graph)
plot(1:31, to_graph)
text(1:31, to_graph, row.names(ctable), cex = 0.6, pos = 4, col = "red")
plot(1:31, to_graph, ylabel = "Chi-Squared Value")
?plot
plot(1:31, to_graph, ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(ctable), cex = 0.6, pos = 4, col = "red")
plot(1:31, to_graph, xlab = "Index", ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(ctable), cex = 0.6, pos = 4, col = "red")
fin2gone <- ctable[,3:]
fin2gone <- ctable[,3:5]
to_graph <- rep(0,nrow(fin2gone))
for (i in 1:nrow(fin2gone)) {
temp <- fin2gone[-i,]
to_graph[i] <- chisq.test(temp)
}
plot(1:31, to_graph, xlab = "Index", ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(fin2gone), cex = 0.6, pos = 4, col = "red")
```
head(data)
table(data$Gata1,data$Gfi1)
gatagfi <- table(data$Gata1,data$Gfi1)
chisq.test(gatagfi)
hoxd8hoxb2 <- table(data$Gata1,data$Gfi1)
chisq.test(hoxd8hoxb2)
hoxd8hoxb2 <- table(data$HoxD8,data$HoxB2)
chisq.test(hoxd8hoxb2)
head(data)
hoxb4sox7 <- table(data$HoxB4,data$Sox7)
chisq.test(hoxb4sox7)
head(data)
notch1ets1 <- table(data$Notch1,data$Ets1)
chisq.test(notch1ets1)
gatagfib <- table(data$Gata1,data$Gfi1b)
chisq.test(gatagfi)
gatagfib <- table(data$Gata1,data$Gfi1b)
chisq.test(gatagfib)
ergmyb <- table(data$Erg,data$Myb)
chisq.test(ergmyb)
?assoc
assoc(gatagfib, shade = T, legend = T)
assoc(hoxb4sox7, shade = T, legend = T)
assoc(gatagfib, shade = T, legend = T)
assoc(hoxb4sox7, shade = T, legend = T)
?assoc
assocplot(hoxb4sox7, shade = T, legend = T)
assocplot(hoxb4sox7)
assocplot(hoxb4sox7, main = "Association Plot of Binary Data", xlab = "HoxB4", ylab = "Sox7")
assocplot(hoxb4sox7, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "HoxB4", ylab = "Sox7")
library(ca)
library(vcd)
data <- read.csv("CellGeneBinary.csv")
gr4sfg=which(substr(data$X,1,5)=="4SFGA")
gr4sf=which(substr(data$X,1,4)=="4SGA")
gr1=which(substr(data$X,1,2)=="PS")
gr2=which(substr(data$X,1,2)=="NP")
gr3=which(substr(data$X,1,2)=="HF")
colnb=rep(0, 1448)
colnb[gr1] = 1
colnb[gr2] = 2
colnb[gr3] = 3
colnb[gr4sf] = 4
colnb[gr4sfg] = 5
celltypes=as.factor(c("PS","NP","HF","4G","4GF")[colnb])
gr4sfglen <- length(gr4sfg)
gr4sflen <- length(gr4sf)
gr1len <- length(gr1)
gr2len <- length(gr2)
gr3len <- length(gr3)
# creates a matrix that will become a contingency table
mat <- matrix(, nrow = ncol(data)-1, ncol = 5)
for (x in 1:5) {
low = 0
high = 1
if (x == 1) {
low = 0
high = gr4sfglen
}
else if (x == 2) {
low = gr4sfglen+1
high = gr4sfglen+gr4sflen
# sub = low:high
}
else if (x == 3) {
low = gr4sfglen+gr4sflen+1
high = gr4sfglen+gr4sflen+gr3len
# sub = low:high
}
else if (x == 4) {
low = gr4sfglen+gr4sflen+gr3len+1
high = gr4sfglen+gr4sflen+gr3len+gr2len
# sub = low:high
}
else {
low = gr4sfglen+gr4sflen+gr3len+gr2len+1
high = gr4sfglen+gr4sflen+gr3len+gr2len+gr1len
# sub = low:high
}
sub = low:high
for (y in 1:(ncol(data)-1)) {
mat[y,x] = sum(data[sub,y+1])
}
}
rownames(mat) <- colnames(data)[2:34]
colnames(mat) <- c("4SFGA","4SGA","HF","NP","PS")
ctable <- mat[-c(14,16),]
chisq.test(ctable)
mosaicplot(ctable, shade = T)
tctable <- t(ctable)
fit2 <- ca(tctable)
plot(fit2)
plot(fit2, mass = TRUE, contrib = "absolute", map = "rowgreen", arrows = c(FALSE, TRUE))
to_graph <- rep(0,nrow(ctable))
for (i in 1:nrow(ctable)) {
temp <- ctable[-i,]
to_graph[i] <- chisq.test(temp)
}
plot(1:31, to_graph, xlab = "Index", ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(ctable), cex = 0.6, pos = 4, col = "red")
fin2gone <- ctable[,3:5]
to_graph <- rep(0,nrow(fin2gone))
for (i in 1:nrow(fin2gone)) {
temp <- fin2gone[-i,]
to_graph[i] <- chisq.test(temp)
}
plot(1:31, to_graph, xlab = "Index", ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(fin2gone), cex = 0.6, pos = 4, col = "red")
# Test of Independence
gatagfib <- table(data$Gata1,data$Gfi1b)
chisq.test(gatagfib) # They are dependent as expected
assocplot(gatagfib, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "Gata1", ylab = "Gfi1b")
hoxb4sox7 <- table(data$HoxB4,data$Sox7)
chisq.test(hoxb4sox7)
assocplot(hoxb4sox7, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "HoxB4", ylab = "Sox7")
notch1ets1 <- table(data$Notch1,data$Ets1)
chisq.test(notch1ets1)
assocplot(notch1ets1, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "Notch1", ylab = "Ets1")
ergmyb <- table(data$Erg,data$Myb)
chisq.test(ergmyb)
assocplot(ergmyb, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "Erg", ylab = "Myb")
# correct p-value by 31C2 if we use conservative correction. Lower rejection rate
to_graph <- rep(0,nrow(ctable))
for (i in 1:nrow(ctable)) {
temp <- ctable[-i,]
to_graph[i] <- chisq.test(temp)
}
plot(1:31, to_graph, xlab = "Index", ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(ctable), cex = 0.6, pos = 4, col = "red")
fin2gone <- ctable[,3:5]
to_graph <- rep(0,nrow(fin2gone))
for (i in 1:nrow(fin2gone)) {
temp <- fin2gone[-i,]
to_graph[i] <- chisq.test(temp)
}
plot(1:31, to_graph, xlab = "Index", ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(fin2gone), cex = 0.6, pos = 4, col = "red")
gatagfib <- table(data$Gata1,data$Gfi1b)
chisq.test(gatagfib) # They are dependent as expected
assocplot(gatagfib, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "Gata1", ylab = "Gfi1b")
hoxb4sox7 <- table(data$HoxB4,data$Sox7)
chisq.test(hoxb4sox7)
assocplot(hoxb4sox7, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "HoxB4", ylab = "Sox7")
notch1ets1 <- table(data$Notch1,data$Ets1)
chisq.test(notch1ets1)
assocplot(notch1ets1, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "Notch1", ylab = "Ets1")
ergmyb <- table(data$Erg,data$Myb)
chisq.test(ergmyb)
assocplot(ergmyb, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "Erg", ylab = "Myb")
View(ctable)
?write.csv()
setwd("~/Desktop/STATS205")
write.csv(ctable, "contingencytable")
mosaicplot(ctable, shade = T)
?mosiacplot
?mosiacplot()
?mosiac
?mosaic()
?mosaicplot()
tctable <- t(ctable)
fit2 <- ca(tctable)
plot(fit2)
plot(fit2, mass = TRUE, contrib = "absolute", map = "rowgreen", arrows = c(FALSE, TRUE))
mosaicplot(gatagfib, col = c("blue", "red"), main = "Mosaic Plot of Binary Data", xlab = "Gata1", ylab = "Gfi1b")
mosaicplot(hoxb4sox7, col = c("blue", "red"), main = "Mosaic Plot of Binary Data", xlab = "HoxB4", ylab = "Sox7")
mosaicplot(ctable, shade = T)
mosaic(ctable, shade = T)
mosaic(tctable, shade = T)
mosaic(ctable, shade = T)
tctable <- t(ctable)
mosaic(tctable, shade = T)
fit2 <- ca(tctable)
plot(fit2)
plot(fit2, mass = TRUE, contrib = "absolute", map = "rowgreen", arrows = c(FALSE, TRUE))
to_graph <- rep(0,nrow(ctable))
for (i in 1:nrow(ctable)) {
temp <- ctable[-i,]
to_graph[i] <- chisq.test(temp)
}
plot(1:31, to_graph, xlab = "Index", ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(ctable), cex = 0.6, pos = 4, col = "red")
fin2gone <- ctable[,3:5]
to_graph <- rep(0,nrow(fin2gone))
for (i in 1:nrow(fin2gone)) {
temp <- fin2gone[-i,]
to_graph[i] <- chisq.test(temp)
}
plot(1:31, to_graph, xlab = "Index", ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(fin2gone), cex = 0.6, pos = 4, col = "red")
fit2 <- ca(tctable)
plot(fit2)
plot(fit2, mass = TRUE, contrib = "absolute", map = "rowgreen", arrows = c(FALSE, TRUE))
to_graph <- rep(0,nrow(ctable))
for (i in 1:nrow(ctable)) {
temp <- ctable[-i,]
to_graph[i] <- chisq.test(temp)
}
plot(1:31, to_graph, xlab = "Index", ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(ctable), cex = 0.6, pos = 4, col = "red")
fin2gone <- ctable[,3:5]
to_graph <- rep(0,nrow(fin2gone))
for (i in 1:nrow(fin2gone)) {
temp <- fin2gone[-i,]
to_graph[i] <- chisq.test(temp)
}
plot(1:31, to_graph, xlab = "Index", ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(fin2gone), cex = 0.6, pos = 4, col = "red")
chmod <- ctable[-c(1,4,6:9,13,15:17,25,26,29),]
View(chmod)
View(chmod)
mosaic(chmod, shade = T)
mosaic(chmod, shade = T)
ct = t(chmod)
mosaic(ct, shade = T)
dev.off()
mosaic(ct, shade = T)
View(ct)
chmod <- ctable[-c(1,4,6:9,13,15:17,25,26,29),]
ct = t(chmod)
mosaic(ct, shade = T)
mosaic(ct, shade = T)
library(ca)
library(vcd)
data <- read.csv("CellGeneBinary.csv")
gr4sfg=which(substr(data$X,1,5)=="4SFGA")
gr4sf=which(substr(data$X,1,4)=="4SGA")
gr1=which(substr(data$X,1,2)=="PS")
gr2=which(substr(data$X,1,2)=="NP")
gr3=which(substr(data$X,1,2)=="HF")
colnb=rep(0, 1448)
colnb[gr1] = 1
colnb[gr2] = 2
colnb[gr3] = 3
colnb[gr4sf] = 4
colnb[gr4sfg] = 5
celltypes=as.factor(c("PS","NP","HF","4G","4GF")[colnb])
gr4sfglen <- length(gr4sfg)
gr4sflen <- length(gr4sf)
gr1len <- length(gr1)
gr2len <- length(gr2)
gr3len <- length(gr3)
# creates a matrix that will become a contingency table
mat <- matrix(, nrow = ncol(data)-1, ncol = 5)
for (x in 1:5) {
low = 0
high = 1
if (x == 1) {
low = 0
high = gr4sfglen
}
else if (x == 2) {
low = gr4sfglen+1
high = gr4sfglen+gr4sflen
# sub = low:high
}
else if (x == 3) {
low = gr4sfglen+gr4sflen+1
high = gr4sfglen+gr4sflen+gr3len
# sub = low:high
}
else if (x == 4) {
low = gr4sfglen+gr4sflen+gr3len+1
high = gr4sfglen+gr4sflen+gr3len+gr2len
# sub = low:high
}
else {
low = gr4sfglen+gr4sflen+gr3len+gr2len+1
high = gr4sfglen+gr4sflen+gr3len+gr2len+gr1len
# sub = low:high
}
sub = low:high
for (y in 1:(ncol(data)-1)) {
mat[y,x] = sum(data[sub,y+1])
}
}
rownames(mat) <- colnames(data)[2:34]
colnames(mat) <- c("4SFGA","4SGA","HF","NP","PS")
ctable <- mat[-c(14,16),]
chisq.test(ctable)
# mosaic(ctable, shade = T)
tctable <- t(ctable)
# mosaic(tctable, shade = T)
fit2 <- ca(tctable)
plot(fit2)
plot(fit2, mass = TRUE, contrib = "absolute", map = "rowgreen", arrows = c(FALSE, TRUE))
to_graph <- rep(0,nrow(ctable))
for (i in 1:nrow(ctable)) {
temp <- ctable[-i,]
to_graph[i] <- chisq.test(temp)
}
plot(1:31, to_graph, xlab = "Index", ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(ctable), cex = 0.6, pos = 4, col = "red")
fin2gone <- ctable[,3:5]
to_graph <- rep(0,nrow(fin2gone))
for (i in 1:nrow(fin2gone)) {
temp <- fin2gone[-i,]
to_graph[i] <- chisq.test(temp)
}
plot(1:31, to_graph, xlab = "Index", ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(fin2gone), cex = 0.6, pos = 4, col = "red")
# Removing genes that do not contribute heavily to Xs
chmod <- ctable[-c(1,4,6:9,13,15:17,25,26,29),]
ct = t(chmod)
mosaic(ct, shade = T)
# Test of Independence
gatagfib <- table(data$Gata1,data$Gfi1b)
chisq.test(gatagfib) # They are dependent as expected
assocplot(gatagfib, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "Gata1", ylab = "Gfi1b")
hoxb4sox7 <- table(data$HoxB4,data$Sox7)
chisq.test(hoxb4sox7)
assocplot(hoxb4sox7, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "HoxB4", ylab = "Sox7")
notch1ets1 <- table(data$Notch1,data$Ets1)
chisq.test(notch1ets1)
assocplot(notch1ets1, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "Notch1", ylab = "Ets1")
ergmyb <- table(data$Erg,data$Myb)
chisq.test(ergmyb)
assocplot(ergmyb, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "Erg", ylab = "Myb")
# correct p-value by 31C2 if we use conservative correction. Lower rejection rate
chmod <- ctable[-c(1,4,6:9,13,15:17,25,26,29),]
ct = t(chmod)
mosaic(ct, shade = T)
to_graph <- rep(0,nrow(ctable))
for (i in 1:nrow(ctable)) {
temp <- ctable[-i,]
to_graph[i] <- chisq.test(temp)
}
plot(1:31, to_graph, xlab = "Index", ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(ctable), cex = 0.6, pos = 4, col = "red")
fin2gone <- ctable[,3:5]
to_graph <- rep(0,nrow(fin2gone))
for (i in 1:nrow(fin2gone)) {
temp <- fin2gone[-i,]
to_graph[i] <- chisq.test(temp)
}
plot(1:31, to_graph, xlab = "Index", ylab = "Chi-Squared Value")
text(1:31, to_graph, row.names(fin2gone), cex = 0.6, pos = 4, col = "red")
names(ctable[c(1,4,6:9,13,15:17,25,26,29)],)
names(ctable[c(1,4,6:9,13,15:17,25,26,29)],1)
names(ctable[c(1,4,6:9,13,15:17,25,26,29),])
ctable[c(1,4,6:9,13,15:17,25,26,29),]
row.names(ctable[c(1,4,6:9,13,15:17,25,26,29),])
chmod <- ctable[-c(1,4,6:8,13,15:17,25,26,29),]
ct = t(chmod)
mosaic(ct, shade = T)
row.names(ctable[c(1,4,6:8,13,15:17,25,26,29),])
mosaic(ct, shade = T)
fit3 <- ca(ct)
plot(fit3)
plot(fit3, mass = TRUE, contrib = "absolute", map = "rowgreen", arrows = c(FALSE, TRUE))
head(data)
gatagfib <- table(data$Gata1,data$Gfi1b)
chisq.test(gatagfib) # They are dependent as expected
assocplot(gatagfib, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "Gata1", ylab = "Gfi1b")
hoxb4sox7 <- table(data$HoxB4,data$Sox7)
chisq.test(hoxb4sox7)
assocplot(hoxb4sox7, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "HoxB4", ylab = "Sox7")
notch1ets1 <- table(data$Notch1,data$Ets1)
chisq.test(notch1ets1)
assocplot(notch1ets1, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "Notch1", ylab = "Ets1")
ergmyb <- table(data$Erg,data$Myb)
chisq.test(ergmyb)
assocplot(ergmyb, col = c("blue", "red"), main = "Association Plot of Binary Data", xlab = "Erg", ylab = "Myb")
